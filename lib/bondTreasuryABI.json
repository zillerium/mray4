[
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "_nftContractAddress",
				"type": "address"
			},
			{
				"internalType": "address",
				"name": "_mrayTokenAddress",
				"type": "address"
			}
		],
		"stateMutability": "nonpayable",
		"type": "constructor"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"name": "allBondIds",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"name": "bondBuyerList",
		"outputs": [
			{
				"internalType": "address",
				"name": "",
				"type": "address"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "bondCollateralizationRatio",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "bondIdCounter",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			},
			{
				"internalType": "address",
				"name": "",
				"type": "address"
			}
		],
		"name": "bondInvestments",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"name": "bondToNft",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"name": "bondedNfts",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"name": "bonds",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "bondId",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "bondAmount",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "bondMaturity",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "bondCouponRate",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "totalBondSupply",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "remainingBondSupply",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "bondSalePeriodEnd",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "bondPeriod",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "bondYield",
				"type": "uint256"
			},
			{
				"internalType": "bool",
				"name": "bondFullyFunded",
				"type": "bool"
			},
			{
				"internalType": "bool",
				"name": "bondAccepted",
				"type": "bool"
			},
			{
				"internalType": "bool",
				"name": "bondRedeemed",
				"type": "bool"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "defaultBondPeriod",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "defaultCouponRate",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "",
				"type": "address"
			}
		],
		"name": "freeUSDC",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "usdcAmount",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "_nftId",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "_amount",
				"type": "uint256"
			}
		],
		"name": "fundBond",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "getAllBondIds",
		"outputs": [
			{
				"internalType": "uint256[]",
				"name": "",
				"type": "uint256[]"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "getAllBondedNfts",
		"outputs": [
			{
				"internalType": "uint256[]",
				"name": "",
				"type": "uint256[]"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "_nftId",
				"type": "uint256"
			}
		],
		"name": "getAllBuyersAndInvestments",
		"outputs": [
			{
				"components": [
					{
						"internalType": "address",
						"name": "buyer",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "investment",
						"type": "uint256"
					}
				],
				"internalType": "struct BondTreasuryContract.BuyerInfo[]",
				"name": "",
				"type": "tuple[]"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "_nftId",
				"type": "uint256"
			}
		],
		"name": "getBondAndNftDetails",
		"outputs": [
			{
				"components": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "bondId",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "bondAmount",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "bondMaturity",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "bondCouponRate",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "totalBondSupply",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "remainingBondSupply",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "bondSalePeriodEnd",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "bondPeriod",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "bondYield",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "bondFullyFunded",
								"type": "bool"
							},
							{
								"internalType": "bool",
								"name": "bondAccepted",
								"type": "bool"
							},
							{
								"internalType": "bool",
								"name": "bondRedeemed",
								"type": "bool"
							}
						],
						"internalType": "struct BondTreasuryContract.Bond",
						"name": "bondDetails",
						"type": "tuple"
					},
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "nftId",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "nftPrice",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "nftOwner",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "nftOriginalOwner",
								"type": "address"
							},
							{
								"internalType": "bool",
								"name": "nftIsBonded",
								"type": "bool"
							}
						],
						"internalType": "struct BondTreasuryContract.NftTreasury",
						"name": "nftDetails",
						"type": "tuple"
					}
				],
				"internalType": "struct BondTreasuryContract.BondedNftDetails",
				"name": "",
				"type": "tuple"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "bondId",
				"type": "uint256"
			}
		],
		"name": "getBondBuyers",
		"outputs": [
			{
				"internalType": "address[]",
				"name": "",
				"type": "address[]"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "_bondId",
				"type": "uint256"
			}
		],
		"name": "getBondDetailsWithNft",
		"outputs": [
			{
				"components": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "bondId",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "bondAmount",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "bondMaturity",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "bondCouponRate",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "totalBondSupply",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "remainingBondSupply",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "bondSalePeriodEnd",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "bondPeriod",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "bondYield",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "bondFullyFunded",
								"type": "bool"
							},
							{
								"internalType": "bool",
								"name": "bondAccepted",
								"type": "bool"
							},
							{
								"internalType": "bool",
								"name": "bondRedeemed",
								"type": "bool"
							}
						],
						"internalType": "struct BondTreasuryContract.Bond",
						"name": "bondDetails",
						"type": "tuple"
					},
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "nftId",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "nftPrice",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "nftOwner",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "nftOriginalOwner",
								"type": "address"
							},
							{
								"internalType": "bool",
								"name": "nftIsBonded",
								"type": "bool"
							}
						],
						"internalType": "struct BondTreasuryContract.NftTreasury",
						"name": "nftDetails",
						"type": "tuple"
					}
				],
				"internalType": "struct BondTreasuryContract.BondedNftDetails",
				"name": "",
				"type": "tuple"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "_nftId",
				"type": "uint256"
			}
		],
		"name": "getBondStatus",
		"outputs": [
			{
				"internalType": "bool",
				"name": "contractBuyerLiability",
				"type": "bool"
			},
			{
				"internalType": "bool",
				"name": "nftOwnerLiability",
				"type": "bool"
			},
			{
				"internalType": "uint256",
				"name": "bondId",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "getBondTreasuryBalance",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "_nftId",
				"type": "uint256"
			}
		],
		"name": "getBondedNftDetails",
		"outputs": [
			{
				"components": [
					{
						"internalType": "uint256",
						"name": "bondId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "bondAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "bondMaturity",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "bondCouponRate",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "totalBondSupply",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "remainingBondSupply",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "bondSalePeriodEnd",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "bondPeriod",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "bondYield",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "bondFullyFunded",
						"type": "bool"
					},
					{
						"internalType": "bool",
						"name": "bondAccepted",
						"type": "bool"
					},
					{
						"internalType": "bool",
						"name": "bondRedeemed",
						"type": "bool"
					}
				],
				"internalType": "struct BondTreasuryContract.Bond",
				"name": "",
				"type": "tuple"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "getBondedNftPrices",
		"outputs": [
			{
				"components": [
					{
						"internalType": "uint256",
						"name": "nftId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "nftPrice",
						"type": "uint256"
					}
				],
				"internalType": "struct BondTreasuryContract.nftBondedValue[]",
				"name": "",
				"type": "tuple[]"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "bondId",
				"type": "uint256"
			},
			{
				"internalType": "address",
				"name": "buyer",
				"type": "address"
			}
		],
		"name": "getBuyerInvestment",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "getDefaultBondPeriod",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "getDefaultCouponRate",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "_nftPrice",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "_bondCouponRate",
				"type": "uint256"
			}
		],
		"name": "getFees",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "bondId",
				"type": "uint256"
			}
		],
		"name": "getTotalBondInvestment",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "getTotalBondedNftPrice",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "_nftId",
				"type": "uint256"
			}
		],
		"name": "isBondActive",
		"outputs": [
			{
				"internalType": "bool",
				"name": "",
				"type": "bool"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "_nftId",
				"type": "uint256"
			}
		],
		"name": "lockNftAndMintMrayTokens",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "mrayToken",
		"outputs": [
			{
				"internalType": "contract MintableERC20",
				"name": "",
				"type": "address"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"name": "nftBondStatus",
		"outputs": [
			{
				"internalType": "bool",
				"name": "contractBuyerLiability",
				"type": "bool"
			},
			{
				"internalType": "bool",
				"name": "nftOwnerLiability",
				"type": "bool"
			},
			{
				"internalType": "uint256",
				"name": "bondId",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "nftContract",
		"outputs": [
			{
				"internalType": "contract UnifiedNFT",
				"name": "",
				"type": "address"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"name": "nftTreasury",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "nftId",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "nftPrice",
				"type": "uint256"
			},
			{
				"internalType": "address",
				"name": "nftOwner",
				"type": "address"
			},
			{
				"internalType": "address",
				"name": "nftOriginalOwner",
				"type": "address"
			},
			{
				"internalType": "bool",
				"name": "nftIsBonded",
				"type": "bool"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "owner",
		"outputs": [
			{
				"internalType": "address",
				"name": "",
				"type": "address"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "_nftId",
				"type": "uint256"
			}
		],
		"name": "redeemBond",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "_nftId",
				"type": "uint256"
			}
		],
		"name": "redeemNFT",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "_nftId",
				"type": "uint256"
			}
		],
		"name": "removeBondedNft",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "newCR",
				"type": "uint256"
			}
		],
		"name": "setBondCollateralizationRatio",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "_bondPeriod",
				"type": "uint256"
			}
		],
		"name": "setDefaultBondPeriod",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "_couponRate",
				"type": "uint256"
			}
		],
		"name": "setDefaultCouponRate",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "_usdcTreasuryContractAddress",
				"type": "address"
			}
		],
		"name": "setUsdcVaultContract",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "_nftId",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "_nftPrice",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "_bondCouponRate",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "_bondSalePeriodEnd",
				"type": "uint256"
			}
		],
		"name": "startBondSale",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"name": "totalBondInvestment",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "totalNftTreasuryValue",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "treasuryBondAmount",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "unixTimeConversionFactor",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "usdcToken",
		"outputs": [
			{
				"internalType": "contract IERC20",
				"name": "",
				"type": "address"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "usdcTreasuryContractAddress",
		"outputs": [
			{
				"internalType": "address",
				"name": "",
				"type": "address"
			}
		],
		"stateMutability": "view",
		"type": "function"
	}
]
